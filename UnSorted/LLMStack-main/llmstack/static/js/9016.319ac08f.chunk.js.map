{"version":3,"file":"static/js/9016.319ac08f.chunk.js","mappings":"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","sources":["data/atoms.js","data/axios.js","pages/dataUtil.jsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\nimport { axios } from \"./axios\";\n\nconst apiProvidersFetchSelector = selector({\n  key: \"apiProvidersFetchSelector\",\n  get: async () => {\n    try {\n      const apiProviders = await axios().get(\"/api/apiproviders\");\n      return apiProviders.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst apiBackendsFetchSelector = selector({\n  key: \"apiBackendsFetchSelector\",\n  get: async () => {\n    try {\n      const apiBackends = await axios().get(\"/api/apibackends\");\n      return apiBackends.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst endpointsFetchSelector = selector({\n  key: \"endpointsFetchSelector\",\n  get: async () => {\n    try {\n      const endpoints = await axios().get(\"/api/endpoints\");\n      return endpoints.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst dataSourcesFetchSelector = selector({\n  key: \"dataSourcesFetchSelector\",\n  get: async () => {\n    try {\n      const dataSources = await axios().get(\"/api/datasources\");\n      return dataSources.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst dataSourceTypesFetchSelector = selector({\n  key: \"dataSourceTypesFetchSelector\",\n  get: async () => {\n    try {\n      const dataSourceTypes = await axios().get(\"/api/datasource_types\");\n      return dataSourceTypes.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const apiProvidersState = atom({\n  key: \"apiProviders\",\n  default: apiProvidersFetchSelector,\n});\n\nexport const apiProviderDropdownListState = selector({\n  key: \"apiProviderDropdownList\",\n  get: async ({ get }) => {\n    const apiProviders = await get(apiProvidersState);\n    return apiProviders.map((x) => {\n      return { label: x.name, value: x.name };\n    });\n  },\n});\n\nexport const apiProviderSelectedState = atom({\n  key: \"apiProviderSelected\",\n  default: null,\n});\n\nexport const apiBackendsState = atom({\n  key: \"apiBackends\",\n  default: apiBackendsFetchSelector,\n});\n\nexport const apiBackendDropdownListState = selector({\n  key: \"apiBackendDropdownList\",\n  get: ({ get }) => {\n    const apiBackends = get(apiBackendsState);\n    const organization = get(organizationState);\n    return apiBackends\n      .filter(\n        (apiBackend) =>\n          (organization?.disabled_api_backends || []).indexOf(apiBackend.id) ===\n          -1,\n      )\n      .map((x) => {\n        return { label: x.name, value: x.id, provider: x.api_provider.name };\n      });\n  },\n});\n\nexport const apiBackendSelectedState = atom({\n  key: \"apiBackendSelected\",\n  default: null,\n});\n\nexport const endpointsState = atom({\n  key: \"endpoints\",\n  default: endpointsFetchSelector,\n});\n\nexport const endpointDropdownListState = selector({\n  key: \"endpointDropdownList\",\n  get: ({ get }) => {\n    const endpoints = get(endpointsState);\n    const parentEndpoints = endpoints\n      .filter((x) => x.version === 0 && !x.draft)\n      .sort((a, b) => (a.created_on < b.created_on ? 1 : -1));\n    return parentEndpoints.map((x) => {\n      return {\n        label: `${x.api_backend.api_provider.name} » ${x.api_backend.name} » ${x.name}`,\n        uuid: x.uuid,\n        options: endpoints\n          .filter((y) => y.parent_uuid === x.uuid)\n          .map((z) => {\n            return {\n              label: `${z.version}: ${z.description}`,\n              value: `${z.parent_uuid}:${z.version}`,\n              version: z.version,\n              backend: x.api_backend.name,\n              provider: x.api_backend.api_provider.name,\n              is_live: z.is_live,\n              uuid: z.uuid,\n            };\n          }),\n      };\n    });\n  },\n});\n\nexport const endpointSelectedState = atom({\n  key: \"endpointSelected\",\n  default: null,\n});\n\nexport const endpointTableDataState = selector({\n  key: \"endpointTableData\",\n  get: ({ get }) => {\n    const endpoints = get(endpointsState)\n      .filter((endpoint) => !endpoint.draft)\n      .sort((a, b) => (a.created_on < b.created_on ? 1 : -1));\n\n    // map of parent endpoints\n    const parentEndpoints = endpoints\n      .filter((x) => x.version === 0)\n      .reduce((acc, entry) => {\n        const entry_map = {\n          [entry.uuid]: { ...entry, versions: [], key: entry.uuid },\n        };\n        return { ...acc, ...entry_map };\n      }, {});\n\n    const childEndpoints = endpoints.filter((x) => x.version !== 0);\n\n    for (let i = 0; i < childEndpoints.length; i++) {\n      if (childEndpoints[i].parent_uuid in parentEndpoints) {\n        parentEndpoints[childEndpoints[i].parent_uuid].versions.push({\n          ...childEndpoints[i],\n          key: childEndpoints[i].uuid,\n        });\n      }\n    }\n    return Object.values(parentEndpoints);\n  },\n});\n\nexport const endpointVersionsState = atom({\n  key: \"endpointVersions\",\n  default: [],\n});\n\nexport const endpointConfigValueState = atom({\n  key: \"endpointConfigValue\",\n  default: {},\n});\n\nexport const templateValueState = atom({\n  key: \"promptValues\",\n  default: {},\n});\n\nexport const inputValueState = atom({\n  key: \"inputValue\",\n  default: {},\n});\n\nexport const saveEndpointModalVisibleState = atom({\n  key: \"saveEndpointModalVisible\",\n  default: false,\n});\n\nexport const saveEndpointVersionModalVisibleState = atom({\n  key: \"saveEndpointVersionModalVisible\",\n  default: false,\n});\n\nexport const shareEndpointModalVisibleState = atom({\n  key: \"shareEndpointModalVisible\",\n  default: false,\n});\n\nexport const endpointShareCodeValueState = atom({\n  key: \"endpointShareCodeValue\",\n  default: null,\n});\n\nexport const profileFetchSelector = selector({\n  key: \"profileFetchSelector\",\n  get: async () => {\n    try {\n      const profile = await axios().get(\"/api/profiles/me\");\n      return profile.data;\n    } catch (error) {\n      return null;\n    }\n  },\n});\n\nexport const profileState = atom({\n  key: \"profileValue\",\n  default: profileFetchSelector,\n});\n\nexport const isLoggedInState = selector({\n  key: \"isLoggedIn\",\n  get: ({ get }) => {\n    return get(profileState) !== null;\n  },\n});\n\nexport const promptHubState = atom({\n  key: \"promptHubState\",\n  default: [],\n});\n\nexport const promptHubListState = selector({\n  key: \"promptHubList\",\n  get: ({ get }) => {\n    const promptHub = get(promptHubState);\n    return promptHub;\n  },\n});\n\nexport const dataSourcesState = atom({\n  key: \"dataSourcesState\",\n  default: dataSourcesFetchSelector,\n});\n\nexport const orgDataSourcesState = selector({\n  key: \"orgDataSourcesState\",\n  get: async ({ get }) => {\n    try {\n      const profileFlags = get(profileFlagsState);\n      if (!profileFlags.IS_ORGANIZATION_MEMBER) {\n        return [];\n      }\n      const dataSources = await axios().get(\"/api/org/datasources\");\n      return dataSources.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const dataSourceTypesState = atom({\n  key: \"dataSourceTypesState\",\n  default: dataSourceTypesFetchSelector,\n});\n\nexport const dataSourceEntriesState = atom({\n  key: \"dataSourceEntriesState\",\n  default: [],\n});\n\nexport const orgDataSourceEntriesState = atom({\n  key: \"orgDataSourceEntriesState\",\n  default: [],\n});\n\nexport const dataSourceEntriesTableDataState = selector({\n  key: \"dataSourceEntriesTableData\",\n  get: ({ get }) => {\n    let dataSourceEntries = get(dataSourceEntriesState);\n    let profileFlags = get(profileFlagsState);\n\n    dataSourceEntries = dataSourceEntries.map((x) => {\n      return { isUserOwned: true, ...x };\n    });\n    let orgDataSourceEntries = profileFlags.IS_ORGANIZATION_MEMBER\n      ? get(orgDataSourceEntriesState)\n      : [];\n    orgDataSourceEntries = orgDataSourceEntries.map((x) => {\n      return { isUserOwned: false, ...x };\n    });\n\n    let privateDataSources = get(dataSourcesState);\n    privateDataSources = privateDataSources.map((x) => {\n      return { isUserOwned: true, ...x };\n    });\n    const privateDataSourcesUUIDs = privateDataSources.map((x) => x.uuid);\n\n    let orgDataSources = profileFlags.IS_ORGANIZATION_MEMBER\n      ? get(orgDataSourcesState)\n      : [];\n    orgDataSources = orgDataSources.map((x) => {\n      return { isUserOwned: false, ...x };\n    });\n\n    orgDataSources = orgDataSources.filter(\n      (x) => !privateDataSourcesUUIDs.includes(x.uuid),\n    );\n\n    let result = [];\n    const datasource_entries_map = {};\n    const org_datasource_entries_map = {};\n\n    for (let i = 0; i < dataSourceEntries.length; i++) {\n      if (dataSourceEntries[i].datasource.uuid in datasource_entries_map) {\n        datasource_entries_map[dataSourceEntries[i].datasource.uuid].push(\n          dataSourceEntries[i],\n        );\n      } else {\n        datasource_entries_map[dataSourceEntries[i].datasource.uuid] = [\n          dataSourceEntries[i],\n        ];\n      }\n    }\n\n    for (let i = 0; i < orgDataSourceEntries.length; i++) {\n      if (\n        orgDataSourceEntries[i].datasource.uuid in org_datasource_entries_map\n      ) {\n        org_datasource_entries_map[\n          orgDataSourceEntries[i].datasource.uuid\n        ].push(orgDataSourceEntries[i]);\n      } else {\n        org_datasource_entries_map[orgDataSourceEntries[i].datasource.uuid] = [\n          orgDataSourceEntries[i],\n        ];\n      }\n    }\n\n    for (let i = 0; i < privateDataSources.length; i++) {\n      result.push({\n        ...privateDataSources[i],\n        ...{\n          data_source_entries:\n            datasource_entries_map[privateDataSources[i].uuid] || [],\n        },\n      });\n    }\n\n    for (let i = 0; i < orgDataSources.length; i++) {\n      result.push({\n        ...orgDataSources[i],\n        ...{\n          data_source_entries:\n            org_datasource_entries_map[orgDataSources[i].uuid] || [],\n        },\n      });\n    }\n\n    return result;\n  },\n});\n\nexport const isMobileState = atom({\n  key: \"isMobileState\",\n  default: window.innerWidth < 768,\n});\n\nexport const appTemplateState = atom({\n  key: \"appTemplateState\",\n  default: null,\n});\n\nexport const appDebugState = atom({\n  key: \"appDebugState\",\n  default: {},\n});\n\nconst appsFetchSelector = selector({\n  key: \"appsFetchSelector\",\n  get: async () => {\n    try {\n      const apps = await axios().get(\"/api/apps\");\n      return apps.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const appsState = atom({\n  key: \"appsState\",\n  default: appsFetchSelector,\n});\n\nexport const profileFlagsFetchSelector = selector({\n  key: \"profileFlagsFetchSelector\",\n  get: async () => {\n    try {\n      const profile = await axios().get(\"/api/profiles/me/flags\");\n      return profile.data;\n    } catch (error) {\n      return {};\n    }\n  },\n});\n\nexport const profileFlagsState = atom({\n  key: \"profileFlagsState\",\n  default: profileFlagsFetchSelector,\n});\n\nexport const organizationFetchSelector = selector({\n  key: \"organizationFetchSelector\",\n  get: async () => {\n    try {\n      const organization = await axios().get(\"/api/org\");\n      return organization.data;\n    } catch (error) {\n      return null;\n    }\n  },\n});\n\nexport const organizationState = atom({\n  key: \"organizationState\",\n  default: organizationFetchSelector,\n});\n","import axiosLib from \"axios\";\nimport { enqueueSnackbar } from \"notistack\";\n\nexport const axios = () => {\n  const caxios = axiosLib.create({\n    xsrfCookieName: \"csrftoken\",\n    xsrfHeaderName: \"X-CSRFToken\",\n  });\n\n  caxios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (\n        !window.location.pathname.startsWith(\"/s/\") &&\n        !window.location.pathname.startsWith(\"/hub\") &&\n        !window.location.pathname.startsWith(\"/app/\") &&\n        (error.response.status === 401 || error.response.status === 403)\n      ) {\n        window.location.href = \"/login\";\n      }\n      enqueueSnackbar(\"Error Occurred\", { variant: \"error\" });\n      return Promise.reject(error);\n    },\n  );\n\n  return caxios;\n};\n","const getCookie = (name) => {\n  const cookieValue = document.cookie\n    .split(\";\")\n    .find((cookie) => cookie.trim().startsWith(`${name}=`));\n  if (!cookieValue) return null;\n  return cookieValue.split(\"=\")[1];\n};\n\nexport const fetchData = async (url, loadingCb, responseCb, errorCb) => {\n  try {\n    loadingCb(true);\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const postData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const putData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const patchData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n"],"names":["apiProvidersFetchSelector","selector","key","get","axios","apiProviders","data","apiBackendsFetchSelector","apiBackends","endpointsFetchSelector","endpoints","dataSourcesFetchSelector","dataSources","dataSourceTypesFetchSelector","dataSourceTypes","apiProvidersState","atom","default","apiProviderDropdownListState","map","x","label","name","value","apiProviderSelectedState","apiBackendsState","apiBackendDropdownListState","organization","organizationState","filter","apiBackend","disabled_api_backends","indexOf","id","provider","api_provider","apiBackendSelectedState","endpointsState","endpointSelectedState","version","draft","sort","a","b","created_on","api_backend","uuid","options","y","parent_uuid","z","description","backend","is_live","endpointTableDataState","endpoint","parentEndpoints","reduce","acc","entry","entry_map","versions","childEndpoints","i","length","push","Object","values","endpointConfigValueState","templateValueState","inputValueState","profileFetchSelector","profile","profileState","isLoggedInState","promptHubState","dataSourcesState","orgDataSourcesState","profileFlagsState","IS_ORGANIZATION_MEMBER","dataSourceTypesState","dataSourceEntriesState","orgDataSourceEntriesState","dataSourceEntriesTableDataState","dataSourceEntries","profileFlags","isUserOwned","orgDataSourceEntries","privateDataSources","privateDataSourcesUUIDs","orgDataSources","includes","result","datasource_entries_map","org_datasource_entries_map","datasource","data_source_entries","isMobileState","window","innerWidth","appsFetchSelector","apps","appsState","profileFlagsFetchSelector","organizationFetchSelector","caxios","axiosLib","xsrfCookieName","xsrfHeaderName","interceptors","response","use","error","location","pathname","startsWith","status","href","enqueueSnackbar","variant","Promise","reject","getCookie","cookieValue","document","cookie","split","find","trim","fetchData","url","loadingCb","responseCb","errorCb","fetch","ok","Error","statusText","json","message","postData","method","headers","body","JSON","stringify","patchData"],"sourceRoot":""}