{"version":3,"file":"static/js/6706.0d52b3ca.chunk.js","mappings":"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","sources":["pages/setting.jsx"],"sourcesContent":["import {\n  Row,\n  Col,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Tooltip,\n  Card,\n  Upload,\n  Divider,\n} from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useEffect, useState } from \"react\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { fetchData, patchData } from \"./dataUtil\";\nimport { organizationState, profileFlagsState } from \"../data/atoms\";\nimport { useRecoilValue } from \"recoil\";\n\nconst onLogoPreview = async (file) => {\n  let src = file.url;\n  if (!src) {\n    src = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file.originFileObj);\n      reader.onload = () => resolve(reader.result);\n    });\n  }\n  const image = new Image();\n  image.src = src;\n  const imgWindow = window.open(src);\n  imgWindow?.document.write(image.outerHTML);\n};\n\nconst SettingPage = () => {\n  const [formData, setFormData] = useState({\n    token: \"\",\n    openai_key: \"\",\n    stabilityai_key: \"\",\n    cohere_key: \"\",\n    forefrontai_key: \"\",\n    elevenlabs_key: \"\",\n    localai_api_key: \"\",\n    localai_base_url: \"\",\n    azure_openai_api_key: \"\",\n    google_service_account_json_key: \"\",\n    anthropic_api_key: \"\",\n    logo: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  const [updateKeys, setUpdateKeys] = useState(new Set());\n  const profileFlags = useRecoilValue(profileFlagsState);\n  const organization = useRecoilValue(organizationState);\n\n  useEffect(() => {\n    fetchData(\n      \"api/profiles/me\",\n      () => {},\n      (profile) => {\n        setFormData({\n          token: profile.token,\n          openai_key: profile.openai_key,\n          stabilityai_key: profile.stabilityai_key,\n          cohere_key: profile.cohere_key,\n          forefrontai_key: profile.forefrontai_key,\n          elevenlabs_key: profile.elevenlabs_key,\n          google_service_account_json_key:\n            profile.google_service_account_json_key,\n          azure_openai_api_key: profile.azure_openai_api_key,\n          localai_api_key: profile.localai_api_key,\n          localai_base_url: profile.localai_base_url,\n          anthropic_api_key: profile.anthropic_api_key,\n          logo: profile.logo,\n          user_email: profile.user_email,\n        });\n        setLoading(false);\n      },\n    );\n  }, []);\n\n  const handleUpdate = (form_field) => {\n    setLoading(true);\n    let data = {};\n    data[form_field] = formData[form_field];\n\n    patchData(\n      \"api/profiles/me\",\n      data,\n      (loading_result) => {\n        setLoading(loading_result);\n      },\n      (profile) => {\n        setFormData({\n          token: profile.token,\n          openai_key: profile.openai_key,\n          stabilityai_key: profile.stabilityai_key,\n          cohere_key: profile.cohere_key,\n          forefrontai_key: profile.forefrontai_key,\n          elevenlabs_key: profile.elevenlabs_key,\n          google_service_account_json_key:\n            profile.google_service_account_json_key,\n          azure_openai_api_key: profile.azure_openai_api_key,\n          localai_api_key: profile.localai_api_key,\n          localai_base_url: profile.localai_base_url,\n          anthropic_api_key: profile.anthropic_api_key,\n          logo: profile.logo,\n        });\n        setLoading(false);\n      },\n      () => {},\n    );\n  };\n\n  return (\n    <div id=\"setting-page\">\n      <Spin spinning={loading} size={\"large\"}>\n        <Form layout=\"vertical\">\n          <Card title=\"Settings\" style={{ textAlign: \"left\", padding: 4 }}>\n            <Row>\n              <Col span={16}>\n                <Form.Item label=\"Promptly Token\">\n                  <Input.Group compact>\n                    <Input\n                      readOnly={true}\n                      style={{\n                        width: \"350px\",\n                      }}\n                      value={formData.token}\n                      defaultValue={formData.token}\n                    />\n                    <Tooltip title=\"Copy Promptly API Token\">\n                      <Button\n                        icon={<CopyOutlined />}\n                        onClick={() =>\n                          navigator.clipboard.writeText(formData.token)\n                        }\n                      />\n                    </Tooltip>\n                  </Input.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"OpenAI API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.openai_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            openai_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"openai_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"StabilityAI API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.stabilityai_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            stabilityai_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"stabilityai_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Cohere API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.cohere_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            cohere_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"cohere_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Elevenlabs API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.elevenlabs_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            elevenlabs_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"elevenlabs_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Azure OpenAI API Key\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.azure_openai_api_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            azure_openai_api_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"azure_openai_api_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item\n                  label=\"Google Service Account JSON Key\"\n                  tooltip=\"base64 encoded JSON key.\"\n                >\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.google_service_account_json_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            google_service_account_json_key: e.target.value,\n                          });\n                          setUpdateKeys(\n                            updateKeys.add(\"google_service_account_json_key\"),\n                          );\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item\n                  label=\"Anthropic API Key\"\n                  tooltip=\"Anthropic API Key for models like Claude\"\n                >\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.anthropic_api_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            anthropic_api_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"anthropic_api_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"LocalAI Base URL\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input\n                        value={formData.localai_base_url}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            localai_base_url: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"localai_base_url\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"LocalAI API Key\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.localai_api_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            localai_api_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"localai_api_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n              \"true\" && (\n              <>\n                <Row>\n                  <Col span={16}>\n                    <Form.Item\n                      name=\"logo\"\n                      label=\"Custom Logo\"\n                      valuePropName=\"filelist\"\n                      help=\"[Pro Feature] Add a custom logo to your Promptly apps. 150px x 30px recommended.\"\n                    >\n                      <Row>\n                        <Col span={24}>\n                          {\" \"}\n                          <ImgCrop rotationSlider aspect={5.06}>\n                            <Upload\n                              disabled={!profileFlags.CAN_UPLOAD_APP_LOGO}\n                              accept=\"image/*\"\n                              action={(file) => {\n                                return new Promise((resolve) => {\n                                  const reader = new FileReader();\n                                  reader.readAsDataURL(file);\n                                  reader.onload = (e) => {\n                                    setFormData({\n                                      ...formData,\n                                      logo: e.target?.result,\n                                    });\n                                    resolve(e.target?.result);\n                                  };\n                                });\n                              }}\n                              listType=\"picture-card\"\n                              fileList={\n                                formData.logo\n                                  ? [\n                                      {\n                                        uid: \"-1\",\n                                        name: \"logo.png\",\n                                        status: \"done\",\n                                        url: formData.logo,\n                                      },\n                                    ]\n                                  : []\n                              }\n                              onChange={({ fileList }) => {\n                                if (fileList.length === 0) {\n                                  setFormData({\n                                    ...formData,\n                                    logo: \"\",\n                                  });\n                                }\n                                setUpdateKeys(updateKeys.add(\"logo\"));\n                              }}\n                              onPreview={onLogoPreview}\n                            >\n                              {formData.logo ? \"\" : \"+ Upload\"}\n                            </Upload>\n                          </ImgCrop>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Divider />\n              </>\n            )}\n            {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n              \"true\" && (\n              <>\n                <Row style={{ flexDirection: \"column\" }}>\n                  <strong>Subscription</strong>\n                  <p\n                    style={{\n                      display: profileFlags.IS_ORGANIZATION_MEMBER\n                        ? \"none\"\n                        : \"block\",\n                    }}\n                  >\n                    Logged in as&nbsp;<strong>{formData.user_email}</strong>.\n                    You are currently subscribed to&nbsp;\n                    <strong>\n                      {profileFlags.IS_PRO_SUBSCRIBER\n                        ? \"Pro\"\n                        : profileFlags.IS_BASIC_SUBSCRIBER\n                        ? \"Basic\"\n                        : \"Free\"}\n                    </strong>\n                    &nbsp;tier. Click on the Manage Subscription button below to\n                    change your plan.&nbsp;\n                    <br />\n                    <i>\n                      Note: You will be needed to login with a link that is sent\n                      to your email.\n                    </i>\n                  </p>\n                  <p\n                    style={{\n                      display: profileFlags.IS_ORGANIZATION_MEMBER\n                        ? \"block\"\n                        : \"none\",\n                    }}\n                  >\n                    Logged in as <strong>{formData.user_email}</strong>. Your\n                    account is managed by your organization,&nbsp;\n                    <strong>{organization?.name}</strong>. Please contact your\n                    admin to manage your subscription.\n                  </p>\n                </Row>\n                <Divider />\n              </>\n            )}\n            <Row style={{ gap: 5 }}>\n              {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n                \"true\" && (\n                <Button\n                  href={`${\n                    process.env.REACT_APP_SUBSCRIPTION_MANAGEMENT_URL\n                  }?prefilled_email=${encodeURIComponent(formData.user_email)}`}\n                  target=\"_blank\"\n                  style={{\n                    display: profileFlags.IS_ORGANIZATION_MEMBER\n                      ? \"none\"\n                      : \"inherit\",\n                  }}\n                >\n                  Manage Subscription\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  updateKeys.forEach((updateKey) => handleUpdate(updateKey));\n                }}\n              >\n                Update\n              </Button>\n            </Row>\n          </Card>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\n\nexport default SettingPage;\n"],"names":["onLogoPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","useState","token","openai_key","stabilityai_key","cohere_key","forefrontai_key","elevenlabs_key","localai_api_key","localai_base_url","azure_openai_api_key","google_service_account_json_key","anthropic_api_key","logo","formData","setFormData","loading","setLoading","Set","updateKeys","setUpdateKeys","profileFlags","useRecoilValue","profileFlagsState","organization","organizationState","useEffect","fetchData","profile","user_email","id","spinning","size","layout","title","style","textAlign","padding","span","label","compact","readOnly","width","value","defaultValue","icon","onClick","navigator","clipboard","writeText","xs","md","disabled","CAN_ADD_KEYS","onChange","e","target","add","tooltip","process","REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT","name","valuePropName","help","rotationSlider","aspect","CAN_UPLOAD_APP_LOGO","accept","action","listType","fileList","uid","status","length","onPreview","flexDirection","display","IS_ORGANIZATION_MEMBER","IS_PRO_SUBSCRIBER","IS_BASIC_SUBSCRIBER","gap","href","REACT_APP_SUBSCRIPTION_MANAGEMENT_URL","encodeURIComponent","type","forEach","updateKey","form_field","data","patchData","loading_result","handleUpdate"],"sourceRoot":""}