{"version":3,"file":"static/js/3796.91a8f333.chunk.js","mappings":"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","sources":["components/ConfigurationFormObjectFieldTemplate.jsx","components/Output.jsx","components/form/Empty.jsx","components/ApiBackendSelector.jsx","components/InputForm.jsx","components/ConfigForm.jsx","components/home/HomeTour.jsx","pages/home.jsx"],"sourcesContent":["import {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Grid,\n  Divider,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { canExpand } from \"@rjsf/utils\";\n\nfunction ObjectFieldGrid(props) {\n  const {\n    properties,\n    disabled,\n    readonly,\n    uiSchema,\n    schema,\n    formData,\n    onAddClick,\n    registry,\n  } = props;\n\n  const { AddButton } = registry.templates;\n\n  return (\n    <Grid container={true} spacing={2} style={{ marginTop: \"10px\" }}>\n      {properties.map((element, index) =>\n        // Remove the <Grid> if the inner element is hidden as the <Grid>\n        // itself would otherwise still take up space.\n        element.hidden ? (\n          element.content\n        ) : (\n          <Grid\n            item={true}\n            xs={12}\n            key={index}\n            style={{ marginBottom: \"10px\" }}\n          >\n            {element.content}\n          </Grid>\n        ),\n      )}\n      {canExpand(schema, uiSchema, formData) && (\n        <Grid container justifyContent=\"flex-end\">\n          <Grid item={true}>\n            <AddButton\n              className=\"object-property-expand\"\n              onClick={onAddClick(schema)}\n              disabled={disabled || readonly}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nfunction RootObjectFieldTemplate(props) {\n  const { properties, uiSchema } = props;\n\n  let requiredProperties = [];\n  let optionalProperties = [];\n  properties.forEach((prop) => {\n    if (\n      uiSchema[prop.name] &&\n      \"ui:advanced\" in uiSchema[prop.name] &&\n      !uiSchema[prop.name][\"ui:advanced\"]\n    ) {\n      requiredProperties.push(prop);\n    } else {\n      optionalProperties.push(prop);\n    }\n  });\n\n  return (\n    <>\n      <ObjectFieldGrid {...{ ...props, properties: requiredProperties }} />\n      <Divider style={{ margin: \"16px 0\" }} />\n      {optionalProperties.length > 0 && (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <strong style={{ marginLeft: \"5px\" }}>Advanced</strong>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ObjectFieldGrid\n              {...{ ...props, properties: optionalProperties }}\n            />\n          </AccordionDetails>\n        </Accordion>\n      )}\n    </>\n  );\n}\n\nexport default function CustomObjectFieldTemplate(props) {\n  const { idSchema } = props;\n\n  if (idSchema?.$id === \"root\") {\n    return <RootObjectFieldTemplate {...props} />;\n  } else {\n    return <ObjectFieldGrid {...props} />;\n  }\n}\n","import * as React from \"react\";\n// eslint-disable-next-line\nimport AceEditor from \"react-ace\";\n\nimport { List, ListItem } from \"@mui/material\";\n\nimport { Box, Tab, CircularProgress, Alert } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport validator from \"@rjsf/validator-ajv8\";\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { Empty } from \"./form/Empty\";\n\nconst outputTheme = createTheme({\n  typography: {\n    fontFamily: \"Lato, sans-serif\",\n    fontSize: 14,\n    color: \"#000\",\n  },\n  components: {\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          \"& .Mui-disabled\": {\n            color: \"#000\",\n          },\n        },\n      },\n    },\n    MuiImageList: {\n      styleOverrides: {\n        root: {\n          width: \"100% !important\",\n          height: \"100% !important\",\n        },\n      },\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        root: {\n          whiteSpace: \"pre-wrap\",\n        },\n      },\n    },\n    MuiImageListItem: {\n      styleOverrides: {\n        img: {\n          width: \"auto\",\n          height: \"auto\",\n        },\n      },\n    },\n  },\n});\n\nexport function Errors(props) {\n  let errors = props.runError?.errors || [];\n\n  return (\n    <List>\n      {errors.map((error) => (\n        <ListItem key={error}>\n          <Alert severity=\"error\">{error}</Alert>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport function Result(props) {\n  let formData = { ...(props.formData || {}) };\n\n  if (formData?.api_response) {\n    delete formData.api_response;\n  }\n\n  return Object.keys(props?.formData || {}).length > 0 ? (\n    <ThemedJsonForm\n      validator={validator}\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={formData}\n      readonly={true}\n      theme={outputTheme}\n      className=\"output-form\"\n    ></ThemedJsonForm>\n  ) : (\n    <Empty emptyMessage=\"No output\" />\n  );\n}\n\nexport default function Output(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Output form tabs\"\n          >\n            <Tab label=\"Output\" value=\"form\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {props.loading ? (\n            <CircularProgress />\n          ) : (\n            <Box>\n              <Result {...props} />\n              <Errors {...props} />\n            </Box>\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\n\nexport function Empty({ emptyImage, emptyMessage, ...props }) {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100%\"\n      color=\"#838383\"\n    >\n      {emptyImage ? emptyImage : null}\n      <Typography variant=\"h6\">\n        {emptyMessage ? emptyMessage : \"No data available\"}\n      </Typography>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\n\nimport {\n  Grid,\n  Select,\n  MenuItem,\n  Box,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport {\n  useRecoilValue,\n  useRecoilState,\n  useSetRecoilState,\n  useResetRecoilState,\n} from \"recoil\";\n\nimport {\n  apiProviderDropdownListState,\n  apiBackendDropdownListState,\n  apiBackendSelectedState,\n  apiBackendsState,\n  apiProviderSelectedState,\n  endpointSelectedState,\n  endpointConfigValueState,\n  inputValueState,\n} from \"../data/atoms\";\n\nexport default function ApiBackendSelector() {\n  const apiprovidersDropdown = useRecoilValue(apiProviderDropdownListState);\n  const apibackendsDropdown = useRecoilValue(apiBackendDropdownListState);\n  const apibackends = useRecoilValue(apiBackendsState);\n  const resetEndpointSelected = useResetRecoilState(endpointSelectedState);\n  const setendpointConfigValueState = useSetRecoilState(\n    endpointConfigValueState,\n  );\n  const resetInputValueState = useResetRecoilState(inputValueState);\n  const resetEndpointConfigValueState = useResetRecoilState(\n    endpointConfigValueState,\n  );\n\n  const [apiProviderSelected, setApiProviderSelected] = useRecoilState(\n    apiProviderSelectedState,\n  );\n  const [apiBackendSelected, setApiBackendSelected] = useRecoilState(\n    apiBackendSelectedState,\n  );\n\n  useEffect(() => {\n    if (apiBackendSelected) {\n      resetEndpointSelected();\n    }\n  }, [apiBackendSelected, resetEndpointSelected]);\n\n  useEffect(() => {\n    if (!apiProviderSelected && apibackends && apibackends.length > 0) {\n      setApiProviderSelected(\n        apibackends.find(\n          (backend) => backend.api_endpoint === \"chat/completions\",\n        )?.api_provider.name,\n      );\n      setApiBackendSelected(\n        apibackends.find(\n          (backend) => backend.api_endpoint === \"chat/completions\",\n        ),\n      );\n    } else if (\n      !apiBackendSelected &&\n      apiProviderSelected &&\n      apiProviderSelected === \"Open AI\"\n    ) {\n      setApiBackendSelected(\n        apibackends.find(\n          (backend) => backend.api_endpoint === \"chat/completions\",\n        ),\n      );\n    }\n  }, [\n    apibackends,\n    apiBackendSelected,\n    apiProviderSelected,\n    setApiBackendSelected,\n    setApiProviderSelected,\n  ]);\n\n  return (\n    <Grid item id=\"apibackendselector\">\n      <Grid container direction=\"row\">\n        <Box sx={{ minWidth: 150 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"select-api-provider-label\">API Provider</InputLabel>\n            <Select\n              style={{ width: \"auto\" }}\n              onChange={(e) => {\n                setApiProviderSelected(e.target.value);\n                setApiBackendSelected(null);\n                setendpointConfigValueState({});\n                resetInputValueState();\n              }}\n              value={apiProviderSelected ? apiProviderSelected : \"\"}\n              label=\"Select API Provider\"\n            >\n              {apiprovidersDropdown.map((option, index) => (\n                <MenuItem key={index} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n\n        {apiProviderSelected && (\n          <Box sx={{ minWidth: 150 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"select-api-backend-label\">API Backend</InputLabel>\n              <Select\n                style={{ width: 150 }}\n                onChange={(e) => {\n                  setApiBackendSelected(\n                    apibackends.find(\n                      (backend) => backend.id === e.target.value,\n                    ),\n                  );\n                  setendpointConfigValueState({});\n                  resetEndpointConfigValueState();\n                  resetInputValueState();\n                }}\n                value={apiBackendSelected ? apiBackendSelected.id : \"\"}\n                label=\"Select API Backend\"\n              >\n                {apibackendsDropdown\n                  .filter((x) => x.provider === apiProviderSelected)\n                  .map((option, index) => (\n                    <MenuItem key={index} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\n\nimport validator from \"@rjsf/validator-ajv8\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { inputValueState, templateValueState } from \"../data/atoms\";\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport { Box, Tab } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport { Empty as EmptyComponent } from \"./form/Empty\";\n\nconst theme = createTheme({\n  spacing: 2,\n  typography: {\n    fontSize: 12,\n  },\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: \"standard\",\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          overflow: \"scroll\",\n          textAlign: \"left\",\n          \"& .MuiTypography-root.MuiTypography-h5\": {\n            font: \"inherit\",\n            fontSize: \"1rem\",\n            fontWeight: \"600\",\n            margin: \"0.5rem 0.2rem\",\n            color: \"#757575\",\n          },\n          \"& .MuiTypography-root.MuiTypography-subtitle2\": {\n            fontSize: \"0.75rem\",\n          },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiBox-root\": {\n            display: \"None\",\n          },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiFormHelperText-root\":\n            {\n              display: \"block\",\n            },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiFormHelperText-root.Mui-focused\":\n            {\n              display: \"block\",\n            },\n        },\n      },\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          textTransform: \"capitalize\",\n        },\n      },\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          padding: \"2px\",\n          \"& .MuiFormHelperText-root\": {\n            textAlign: \"left\",\n            margin: \"2px\",\n          },\n          \"& .MuiFormControl-root:has(.MuiSlider-root) label\": {\n            fontSize: \"0.75rem\",\n            textAlign: \"start\",\n          },\n        },\n      },\n    },\n  },\n});\n\nconst getTemplateVariables = (input) => {\n  const data = typeof input === \"string\" ? input : JSON.stringify(input);\n  const regex = /{{(.*?)}}/g;\n  const matches = data.matchAll(regex);\n  const keys = Array.from(matches, (m) => m[1]);\n  return keys;\n};\n// Parses given text and returns list of template keys defined as {{<template_key>}}\nconst getPromptValuesSchema = (input) => {\n  const keys = getTemplateVariables(input);\n  const schema = {\n    type: \"object\",\n    properties: {},\n  };\n  keys.forEach((key) => {\n    schema.properties[key] = {\n      type: \"string\",\n      title: key,\n    };\n  });\n  return schema;\n};\n\nexport function InputThemedForm(props) {\n  const [data, setData] = useRecoilState(inputValueState);\n\n  return (\n    <ThemedJsonForm\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={data}\n      validator={validator}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n      theme={theme}\n    ></ThemedJsonForm>\n  );\n}\n\nexport function TemplateVariablesThemedForm(props) {\n  const [data, setData] = useRecoilState(templateValueState);\n  const input = useRecoilValue(inputValueState);\n\n  return (\n    <ThemedJsonForm\n      schema={input && input !== \"\" ? getPromptValuesSchema(input) : {}}\n      uiSchema={props.uiSchema}\n      formData={data}\n      validator={validator}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n    >\n      <div></div>\n    </ThemedJsonForm>\n  );\n}\n\nexport default function InputForm(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  let schema = props.schema ? JSON.parse(JSON.stringify(props.schema)) : {};\n  let uiSchema = props.uiSchema\n    ? JSON.parse(JSON.stringify(props.uiSchema))\n    : {};\n  let input_form_label = props?.schema?.title\n    ? props?.schema?.title\n    : \"Input Form\";\n\n  if (props?.schema?.title) {\n    schema.title = \"\";\n    schema.description = \"\";\n  }\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Config form tabs\"\n          >\n            <Tab\n              label={input_form_label ? input_form_label : \"Input Form\"}\n              value=\"form\"\n            />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <InputThemedForm\n              schema={schema}\n              uiSchema={uiSchema}\n              submitBtn={props.submitBtn}\n            />\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import * as React from \"react\";\n\nimport { Box, Tab } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport { useRecoilState } from \"recoil\";\nimport AceEditor from \"react-ace\";\nimport validator from \"@rjsf/validator-ajv8\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-chrome\";\n\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { endpointConfigValueState } from \"../data/atoms\";\nimport CustomObjectFieldTemplate from \"../components/ConfigurationFormObjectFieldTemplate\";\nimport { Empty as EmptyComponent } from \"../components/form/Empty\";\n\nexport function ThemedForm(props) {\n  const [data, setData] = useRecoilState(endpointConfigValueState);\n  return (\n    <ThemedJsonForm\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={data}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n      validator={validator}\n      templates={{ ObjectFieldTemplate: CustomObjectFieldTemplate }}\n    >\n      <div></div>\n    </ThemedJsonForm>\n  );\n}\n\nexport function ThemedJsonEditor() {\n  const [data, setData] = useRecoilState(endpointConfigValueState);\n\n  return (\n    <AceEditor\n      mode=\"json\"\n      theme=\"chrome\"\n      value={JSON.stringify(data, null, 2)}\n      onChange={(data) => {\n        setData(JSON.parse(data));\n      }}\n      editorProps={{ $blockScrolling: true }}\n      setOptions={{\n        useWorker: false,\n        showGutter: false,\n      }}\n    />\n  );\n}\n\nexport default function ConfigForm(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  let schema = props.schema ? JSON.parse(JSON.stringify(props.schema)) : {};\n\n  if (props?.schema?.title) {\n    schema.title = null;\n\n    schema.description = null;\n  }\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Config form tabs\"\n          >\n            <Tab label=\"Config Form\" value=\"form\" />\n            <Tab label=\"JSON\" value=\"json\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <ThemedForm schema={schema} uiSchema={props.uiSchema} />\n          )}\n        </TabPanel>\n        <TabPanel value=\"json\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <ThemedJsonEditor {...props} />\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport { Tour } from \"antd\";\n\nexport default function HomeTour({\n  tourRef1,\n  tourRef2,\n  tourRef3,\n  tourRef4,\n  tourRef5,\n  tourRef6,\n}) {\n  const tourSteps = [\n    {\n      title: \"Welcome to Promptly\",\n      description:\n        \"Test, version and share your prompts with others. Create Endpoints and call from your application to invoke LLMs with saved prompts.\",\n    },\n    {\n      title: \"Pick your LLM Provider\",\n      description:\n        \"Use this toggle to use an existing endpoint or pick a new backend. Update model parameters to the right. Use Discover on left to find new Prompts\",\n      target: () => tourRef1.current,\n    },\n    {\n      title: \"Prompt Editor\",\n      description:\n        \"This is where you can write your prompt. Use {{}} to add variables and form in next tab to fill the values.\",\n      target: () => tourRef4.current,\n    },\n    {\n      title: \"Share Prompt\",\n      description:\n        \"Use this button to share your Prompt and output. API keys and Endpoints are NOT shared!\",\n      target: () => tourRef5.current,\n    },\n    {\n      title: \"Test Prompt\",\n      description:\n        \"Click this to Test Your Prompt. Add your API keys in the settings for better results. Go Click Now!\",\n      target: () => tourRef6.current,\n    },\n  ];\n  const [cookies, setCookie] = useCookies([\"tour\"]);\n  const [showTour, setShowTour] = useState(cookies[\"tour\"] === undefined);\n\n  return (\n    <Tour\n      open={showTour}\n      onClose={() => {\n        setShowTour(false);\n        setCookie(\"tour\", \"1\");\n      }}\n      steps={tourSteps}\n      style={{ width: \"100%\" }}\n    />\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport { Stack, Grid, Divider, Button as MuiButton } from \"@mui/material\";\n\nimport ApiBackendSelector from \"../components/ApiBackendSelector\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  apiBackendSelectedState,\n  endpointSelectedState,\n  endpointConfigValueState,\n  templateValueState,\n  isLoggedInState,\n  inputValueState,\n} from \"../data/atoms\";\nimport { axios } from \"../data/axios\";\nimport Output from \"../components/Output\";\n\nimport InputForm from \"../components/InputForm\";\nimport ConfigForm from \"../components/ConfigForm\";\nimport HomeTour from \"../components/home/HomeTour\";\n\nexport default function HomePage() {\n  const isLoggedIn = useRecoilValue(isLoggedInState);\n  const [input] = useRecoilState(inputValueState);\n\n  const [apiBackendSelected, setApiBackendSelected] = useRecoilState(\n    apiBackendSelectedState,\n  );\n  const [endpointSelected, setEndpointSelected] = useRecoilState(\n    endpointSelectedState,\n  );\n  const [paramValues, setParamValues] = useRecoilState(\n    endpointConfigValueState,\n  );\n  const [promptValues, setPromptValues] = useRecoilState(templateValueState);\n  const [output, setOutput] = useState(\"\");\n  const [runError, setRunError] = useState(\"\");\n  const [outputLoading, setOutputLoading] = useState(false);\n  const [tokenCount, setTokenCount] = useState(null);\n  const [processorResult, setProcessorResult] = useState(null);\n\n  const tourRef1 = useRef(null);\n  const tourRef2 = useRef(null);\n  const tourRef3 = useRef(null);\n  const tourRef4 = useRef(null);\n  const tourRef5 = useRef(null);\n  const tourRef6 = useRef(null);\n\n  const runEndpoint = (endpoint) => {\n    if (!endpoint) {\n      setRunError(\n        \"No endpoint selected. Please select API Backend or an existing endpoint.\",\n      );\n      return;\n    }\n\n    setRunError(\"\");\n    setTokenCount(null);\n    setOutputLoading(true);\n\n    axios()\n      .post(\n        `/api/endpoints/invoke_api/${endpoint.parent_uuid}/${endpoint.version}`,\n        {\n          input: input,\n          template_values: promptValues || {},\n          config: paramValues || {},\n          bypass_cache: true,\n        },\n      )\n      .then((response) => {\n        if (response?.data?.errors) {\n          setOutput(\"\");\n          setRunError(JSON.stringify(response?.data?.errors));\n        }\n\n        setProcessorResult(response?.data?.output);\n        if (response?.data?.output?.generations) {\n          setOutput(response?.data?.output?.generations);\n        } else if (response?.data?.output?.chat_completions) {\n          setOutput(response?.data?.output?.chat_completions);\n        } else {\n          setOutput([response?.data?.output]);\n        }\n\n        setOutputLoading(false);\n\n        // Update token count\n        if (\n          response?.data?.output?._response?.api_response?.usage !== undefined\n        ) {\n          if (\n            response?.data?.output?._response?.api_response?.usage\n              .prompt_tokens !== undefined &&\n            response?.data?.output?._response?.api_response?.usage\n              .completion_tokens !== undefined\n          ) {\n            setTokenCount(\n              `${response?.data?.output?._response?.api_response?.usage.total_tokens} (P${response?.data?.output?._response?.api_response?.usage.prompt_tokens} + C${response?.data?.output?._response?.api_response?.usage.completion_tokens})`,\n            );\n          } else if (\n            response?.data?.output?._response?.api_response?.usage\n              .total_tokens !== undefined\n          ) {\n            setTokenCount(\n              response?.data?.output?._response?.api_response?.usage\n                .total_tokens,\n            );\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setRunError(error?.response?.data || \"Failed to run given prompt\");\n        setOutputLoading(false);\n      });\n  };\n\n  const testPrompt = () => {\n    // If we do not have an endpoint available, create a temporary one\n    let endpoint = endpointSelected;\n    if (!endpointSelected && apiBackendSelected) {\n      axios()\n        .post(`/api/endpoints`, {\n          name: `Playground - ${new Date().toLocaleString()}`,\n          api_backend: apiBackendSelected.id,\n          draft: true,\n          input: input,\n          param_values: paramValues,\n          config: paramValues,\n          prompt_values: promptValues,\n          post_processor: \"\",\n        })\n        .then((response) => {\n          endpoint = response.data;\n          setEndpointSelected(response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .then(() => {\n          runEndpoint(endpoint);\n        });\n    } else {\n      runEndpoint(endpoint);\n    }\n  };\n\n  const TestPrompt = () => {\n    return (\n      <MuiButton\n        type=\"primary\"\n        onClick={(e) => {\n          if (isLoggedIn) {\n            return testPrompt();\n          }\n        }}\n        ref={tourRef6}\n        variant=\"contained\"\n      >\n        {\"Submit\"}\n      </MuiButton>\n    );\n  };\n\n  // Reset endpointSelected, apiBackendSelected, promptValues, paramValues and output on load\n  useEffect(() => {\n    setTokenCount(null);\n    setOutput(\"\");\n  }, [\n    setApiBackendSelected,\n    setEndpointSelected,\n    setParamValues,\n    setPromptValues,\n  ]);\n\n  useEffect(() => {}, [paramValues, promptValues]);\n\n  return (\n    <div\n      id=\"home-page\"\n      style={{ height: \"100%\", overflow: \"scroll\", padding: \"2px\" }}\n    >\n      <HomeTour\n        tourRef1={tourRef1}\n        tourRef2={tourRef2}\n        tourRef3={tourRef3}\n        tourRef4={tourRef4}\n        tourRef5={tourRef5}\n        tourRef6={tourRef6}\n      />\n      <Stack\n        spacing={2}\n        divider={<Divider orientation=\"horizontal\" flexItem />}\n        sx={{ width: \"100%\", height: \"100%\", paddingTop: \"5px\" }}\n      >\n        <ApiBackendSelector innerRef={tourRef2} />\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4} sx={{ height: \"100%\" }}>\n            <Stack spacing={2}>\n              <div style={{ height: \"10%\" }}>\n                <InputForm\n                  schema={\n                    apiBackendSelected ? apiBackendSelected.input_schema : {}\n                  }\n                  uiSchema={\n                    apiBackendSelected ? apiBackendSelected.input_ui_schema : {}\n                  }\n                  emptyMessage=\"Select your API Backend to see the parameters\"\n                />\n              </div>\n              <div>{apiBackendSelected && <TestPrompt />}</div>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ConfigForm\n              schema={\n                apiBackendSelected ? apiBackendSelected.config_schema : {}\n              }\n              uiSchema={\n                apiBackendSelected ? apiBackendSelected.config_ui_schema : {}\n              }\n              formData={paramValues}\n              atomState={endpointConfigValueState}\n              emptyMessage=\"Select your API Backend to see the parameters\"\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Output\n              result={output}\n              endpoint={endpointSelected}\n              loading={outputLoading}\n              loadingTip={\"Running the input...\"}\n              runError={runError}\n              tokenCount={tokenCount}\n              schema={apiBackendSelected?.output_schema || {}}\n              uiSchema={apiBackendSelected?.output_ui_schema || {}}\n              formData={processorResult || {}}\n            />\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n}\n"],"names":["ObjectFieldGrid","props","properties","disabled","readonly","uiSchema","schema","formData","onAddClick","registry","AddButton","templates","container","spacing","style","marginTop","map","element","index","hidden","content","item","xs","marginBottom","canExpand","justifyContent","className","onClick","RootObjectFieldTemplate","requiredProperties","optionalProperties","forEach","prop","name","push","margin","length","expandIcon","marginLeft","CustomObjectFieldTemplate","idSchema","$id","outputTheme","createTheme","typography","fontFamily","fontSize","color","components","MuiFormControl","styleOverrides","root","MuiImageList","width","height","MuiListItemText","whiteSpace","MuiImageListItem","img","Errors","errors","runError","error","severity","Result","api_response","Object","keys","validator","theme","emptyMessage","Output","React","value","setValue","sx","borderBottom","borderColor","onChange","event","newValue","label","padding","loading","Empty","emptyImage","display","flexDirection","alignItems","variant","ApiBackendSelector","apiprovidersDropdown","useRecoilValue","apiProviderDropdownListState","apibackendsDropdown","apiBackendDropdownListState","apibackends","apiBackendsState","resetEndpointSelected","useResetRecoilState","endpointSelectedState","setendpointConfigValueState","useSetRecoilState","endpointConfigValueState","resetInputValueState","inputValueState","resetEndpointConfigValueState","useRecoilState","apiProviderSelectedState","apiProviderSelected","setApiProviderSelected","apiBackendSelectedState","apiBackendSelected","setApiBackendSelected","useEffect","find","backend","api_endpoint","api_provider","Grid","id","direction","Box","minWidth","FormControl","fullWidth","InputLabel","Select","e","target","option","MenuItem","filter","x","provider","MuiTextField","defaultProps","MuiPaper","overflow","textAlign","font","fontWeight","MuiSelect","select","textTransform","InputThemedForm","data","setData","InputForm","JSON","parse","stringify","input_form_label","title","description","TabContext","TabList","Tab","TabPanel","submitBtn","ThemedForm","ObjectFieldTemplate","ThemedJsonEditor","mode","editorProps","$blockScrolling","setOptions","useWorker","showGutter","ConfigForm","HomeTour","tourRef1","tourRef4","tourRef2","tourRef3","tourRef5","tourRef6","tourSteps","current","useCookies","cookies","setCookie","useState","undefined","showTour","setShowTour","open","onClose","steps","HomePage","isLoggedIn","isLoggedInState","input","endpointSelected","setEndpointSelected","paramValues","setParamValues","templateValueState","promptValues","setPromptValues","output","setOutput","setRunError","outputLoading","setOutputLoading","tokenCount","setTokenCount","processorResult","setProcessorResult","useRef","runEndpoint","endpoint","axios","post","parent_uuid","version","template_values","config","bypass_cache","then","response","generations","chat_completions","_response","usage","prompt_tokens","completion_tokens","total_tokens","catch","console","TestPrompt","type","Date","toLocaleString","api_backend","draft","param_values","prompt_values","post_processor","testPrompt","ref","Stack","divider","Divider","orientation","flexItem","paddingTop","innerRef","md","input_schema","input_ui_schema","config_schema","config_ui_schema","atomState","result","loadingTip","output_schema","output_ui_schema"],"sourceRoot":""}