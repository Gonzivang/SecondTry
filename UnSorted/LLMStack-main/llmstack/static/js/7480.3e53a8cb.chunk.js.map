{"version":3,"file":"static/js/7480.3e53a8cb.chunk.js","mappings":"kVASA,SAASA,EAAsBC,GAE7B,OAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAkDF,EAAAA,EAAAA,WAAS,GAAM,eAA1DG,EAAiB,KAAEC,EAAoB,KAC9C,IACE,IAAMC,EAAOC,KAAKC,MAAMR,EAAMS,SAAS,IACvC,OACE,SAACC,EAAA,EAAc,CACbC,OAAQL,EACRJ,SAAUA,EACVU,UAAWA,EAAAA,EACXC,SAAU,SAACC,GACTX,EAAYW,EAAEZ,SAChB,EACAa,WACE,SAACC,EAAA,EAAM,CACLC,QAAQ,YACRC,QAAS,WACPb,GAAqB,GACrBL,EAAMmB,aAAajB,EACrB,EACAkB,SAAUhB,EAAkB,SAC7B,YAQT,CAFE,MAAOU,GACPO,QAAQC,IAAIR,EACd,CACA,OAAO,yBAAK,yBACd,CAEe,SAASS,EAAiBvB,GACvC,OACE,SAAC,KAAa,kBACRA,GAAK,IACTwB,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,IAAK,YAAO,EAAJC,KAAsB,IAAb5B,GAAK,YACZ6B,EAAa7B,EAAb6B,IAAKC,EAAQ9B,EAAR8B,IAEb,EAAyBD,EAAIE,MAAM,KAAI,eAAhCC,EAAO,KAAEC,EAAK,KACjBC,EAAY,CAAC,EACjB,IACEA,EAAY3B,KAAKC,MAAMyB,EAEvB,CADA,MAAOnB,GACP,CAGF,OAAIgB,EAAIK,WAAW,gBAA8B,UAAZH,GAEjC,kBACEI,UAAQ,EACRH,OAAK,kBAAO,CAAEI,QAAS,UAAcH,GACrCJ,IAAKA,EACLQ,UAAQ,WAEP,MAMLR,EAAIS,SAAS,SACbT,EAAIS,SAAS,UACbT,EAAIS,SAAS,SAGX,kBACEH,UAAQ,EACRH,OAAK,kBACA,CACDI,QAAS,QACTG,SAAU,OACVC,UAAW,6BAEVP,GAELJ,IAAKA,EAAI,SACV,0BAOH,gBACEA,IAAKA,G,6qXACLD,IAAKG,EACLC,OAAK,kBACA,CACDI,QAAS,QACTG,SAAU,OACVC,UAAW,6BAEVP,IAIX,EACAQ,EAAG,YAAO,EAAJd,KAAsB,IAAb5B,GAAK,YAClB,OACE,gCAAOA,GAAK,IAAE2C,OAAO,SAASC,IAAI,sBAAqB,SACpD5C,EAAMS,WAGb,EACAoC,MAAO,YAAO,EAAJjB,KAAsB,IAAb5B,GAAK,YACtB,OACE,kCACEiC,MAAO,CACLa,eAAgB,WAChBC,OAAQ,mBAEN/C,GAAK,aAERA,EAAMS,WAGb,EACAuC,GAAI,YAAO,EAAJpB,KAAsB,IAAb5B,GAAK,YACnB,OACE,iCACMA,GAAK,IACTiC,MAAO,CACLc,OAAQ,kBACR,SAED/C,EAAMS,WAGb,EACAwC,GAAI,YAAO,EAAJrB,KAAsB,IAAb5B,GAAK,YACnB,OACE,iCACMA,GAAK,IACTiC,MAAO,CACLc,OAAQ,kBACR,SAED/C,EAAMS,WAGb,EACAyC,GAAI,YAAO,EAAJtB,KAAsB,IAAb5B,GAAK,YACnB,OACE,iCACMA,GAAK,IACTiC,MAAO,CACLc,OAAQ,kBACR,SAED/C,EAAMS,WAGb,EACA0C,KAAM,YAAO,EAAJvB,KAA0B,IAAjBwB,GAAS,YAEzB,MAAiB,2BADAA,EAAUC,WAGvB,SAACtD,GAAqB,QACpBoB,aAAcnB,EAAMmB,cAChBiC,KAIH,mCAAUA,GAAS,aAAGA,EAAU3C,WACzC,GACA,SAEDT,EAAMS,UAAY,KAGzB,C,+FCtLe,SAAS6C,IACtB,OACE,gBAAKC,GAAG,eAAc,UACpB,SAAC,IAAqB,CAACC,eAAe,KAG5C,C","sources":["components/apps/MarkdownRenderer.jsx","pages/history.jsx"],"sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport loadingImage from \"../../assets/images/loading.gif\";\nimport ThemedJsonForm from \"../ThemedJsonForm\";\nimport validator from \"@rjsf/validator-ajv8\";\nimport { useState } from \"react\";\n\nimport { Button } from \"@mui/material\";\n\nfunction FunctionFormComponent(props) {\n  // Render a form component with submit button\n  const [formData, setFormData] = useState({});\n  const [submitBtnDisabled, setSubmitBtnDisabled] = useState(false);\n  try {\n    const form = JSON.parse(props.children[0]);\n    return (\n      <ThemedJsonForm\n        schema={form}\n        formData={formData}\n        validator={validator}\n        onChange={(e) => {\n          setFormData(e.formData);\n        }}\n        submitBtn={\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setSubmitBtnDisabled(true);\n              props.onFormSubmit(formData);\n            }}\n            disabled={submitBtnDisabled}\n          >\n            Submit\n          </Button>\n        }\n      />\n    );\n  } catch (e) {\n    console.log(e);\n  }\n  return <div>Unable to render form</div>;\n}\n\nexport default function MarkdownRenderer(props) {\n  return (\n    <ReactMarkdown\n      {...props}\n      remarkPlugins={[remarkGfm]}\n      components={{\n        img: ({ node, ...props }) => {\n          const { alt, src } = props;\n          // We provide alt text and style as altText|style where style is a string\n          const [altText, style] = alt.split(\"|\");\n          let styleJson = {};\n          try {\n            styleJson = JSON.parse(style);\n          } catch (e) {\n            // Do nothing\n          }\n\n          if (src.startsWith(\"data:audio/\") || altText === \"Audio\") {\n            return (\n              <audio\n                controls\n                style={{ ...{ display: \"block\" }, ...styleJson }}\n                src={src}\n                autoPlay\n              >\n                {\" \"}\n              </audio>\n            );\n          }\n          // If src is a video that can be played on the browser, render it as a video\n          if (\n            src.endsWith(\".mp4\") ||\n            src.endsWith(\".webm\") ||\n            src.endsWith(\".ogg\")\n          ) {\n            return (\n              <video\n                controls\n                style={{\n                  ...{\n                    display: \"block\",\n                    maxWidth: \"100%\",\n                    boxShadow: \"0px 0px 10px 1px #7d7d7d\",\n                  },\n                  ...styleJson,\n                }}\n                src={src}\n              >\n                Unable to load video\n              </video>\n            );\n          }\n\n          return (\n            <img\n              src={src || loadingImage}\n              alt={altText}\n              style={{\n                ...{\n                  display: \"block\",\n                  maxWidth: \"100%\",\n                  boxShadow: \"0px 0px 10px 1px #7d7d7d\",\n                },\n                ...styleJson,\n              }}\n            />\n          );\n        },\n        a: ({ node, ...props }) => {\n          return (\n            <a {...props} target=\"_blank\" rel=\"noreferrer nofollow\">\n              {props.children}\n            </a>\n          );\n        },\n        table: ({ node, ...props }) => {\n          return (\n            <table\n              style={{\n                borderCollapse: \"collapse\",\n                border: \"1px solid #ccc\",\n              }}\n              {...props}\n            >\n              {props.children}\n            </table>\n          );\n        },\n        tr: ({ node, ...props }) => {\n          return (\n            <tr\n              {...props}\n              style={{\n                border: \"1px solid #ccc\",\n              }}\n            >\n              {props.children}\n            </tr>\n          );\n        },\n        th: ({ node, ...props }) => {\n          return (\n            <th\n              {...props}\n              style={{\n                border: \"1px solid #ccc\",\n              }}\n            >\n              {props.children}\n            </th>\n          );\n        },\n        td: ({ node, ...props }) => {\n          return (\n            <td\n              {...props}\n              style={{\n                border: \"1px solid #ccc\",\n              }}\n            >\n              {props.children}\n            </td>\n          );\n        },\n        code: ({ node, ...codeProps }) => {\n          const language = codeProps.className;\n          if (language === \"language-function_form\") {\n            return (\n              <FunctionFormComponent\n                onFormSubmit={props.onFormSubmit}\n                {...codeProps}\n              />\n            );\n          }\n          return <code {...codeProps}>{codeProps.children}</code>;\n        },\n      }}\n    >\n      {props.children || \"\"}\n    </ReactMarkdown>\n  );\n}\n","import { AppRunHistoryTimeline } from \"../components/apps/AppRunHistoryTimeline\";\n\nexport default function HistoryPage() {\n  return (\n    <div id=\"history-page\">\n      <AppRunHistoryTimeline showFilterBar={true} />\n    </div>\n  );\n}\n"],"names":["FunctionFormComponent","props","useState","formData","setFormData","submitBtnDisabled","setSubmitBtnDisabled","form","JSON","parse","children","ThemedJsonForm","schema","validator","onChange","e","submitBtn","Button","variant","onClick","onFormSubmit","disabled","console","log","MarkdownRenderer","remarkPlugins","remarkGfm","components","img","node","alt","src","split","altText","style","styleJson","startsWith","controls","display","autoPlay","endsWith","maxWidth","boxShadow","a","target","rel","table","borderCollapse","border","tr","th","td","code","codeProps","className","HistoryPage","id","showFilterBar"],"sourceRoot":""}